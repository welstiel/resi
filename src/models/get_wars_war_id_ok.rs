/*
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GetWarsWarIdOk : 200 ok object



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetWarsWarIdOk {
    #[serde(rename = "aggressor")]
    pub aggressor: Box<crate::models::GetWarsWarIdAggressor>,
    /// allied corporations or alliances, each object contains either corporation_id or alliance_id
    #[serde(rename = "allies", skip_serializing_if = "Option::is_none")]
    pub allies: Option<Vec<crate::models::GetWarsWarIdAlly>>,
    /// Time that the war was declared
    #[serde(rename = "declared")]
    pub declared: String,
    #[serde(rename = "defender")]
    pub defender: Box<crate::models::GetWarsWarIdDefender>,
    /// Time the war ended and shooting was no longer allowed
    #[serde(rename = "finished", skip_serializing_if = "Option::is_none")]
    pub finished: Option<String>,
    /// ID of the specified war
    #[serde(rename = "id")]
    pub id: i32,
    /// Was the war declared mutual by both parties
    #[serde(rename = "mutual")]
    pub mutual: bool,
    /// Is the war currently open for allies or not
    #[serde(rename = "open_for_allies")]
    pub open_for_allies: bool,
    /// Time the war was retracted but both sides could still shoot each other
    #[serde(rename = "retracted", skip_serializing_if = "Option::is_none")]
    pub retracted: Option<String>,
    /// Time when the war started and both sides could shoot each other
    #[serde(rename = "started", skip_serializing_if = "Option::is_none")]
    pub started: Option<String>,
}

impl GetWarsWarIdOk {
    /// 200 ok object
    pub fn new(aggressor: crate::models::GetWarsWarIdAggressor, declared: String, defender: crate::models::GetWarsWarIdDefender, id: i32, mutual: bool, open_for_allies: bool) -> GetWarsWarIdOk {
        GetWarsWarIdOk {
            aggressor: Box::new(aggressor),
            allies: None,
            declared,
            defender: Box::new(defender),
            finished: None,
            id,
            mutual,
            open_for_allies,
            retracted: None,
            started: None,
        }
    }
}


