/*
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PostFleetsFleetIdMembersInvitation : invitation object



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostFleetsFleetIdMembersInvitation {
    /// The character you want to invite
    #[serde(rename = "character_id")]
    pub character_id: i32,
    /// If a character is invited with the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified. If a character is invited with the `wing_commander` role, only `wing_id` should be specified. If a character is invited with the `squad_commander` role, both `wing_id` and `squad_id` should be specified. If a character is invited with the `squad_member` role, `wing_id` and `squad_id` should either both be specified or not specified at all. If they aren’t specified, the invited character will join any squad with available positions.
    #[serde(rename = "role")]
    pub role: Role,
    /// squad_id integer
    #[serde(rename = "squad_id", skip_serializing_if = "Option::is_none")]
    pub squad_id: Option<i64>,
    /// wing_id integer
    #[serde(rename = "wing_id", skip_serializing_if = "Option::is_none")]
    pub wing_id: Option<i64>,
}

impl PostFleetsFleetIdMembersInvitation {
    /// invitation object
    pub fn new(character_id: i32, role: Role) -> PostFleetsFleetIdMembersInvitation {
        PostFleetsFleetIdMembersInvitation {
            character_id,
            role,
            squad_id: None,
            wing_id: None,
        }
    }
}

/// If a character is invited with the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified. If a character is invited with the `wing_commander` role, only `wing_id` should be specified. If a character is invited with the `squad_commander` role, both `wing_id` and `squad_id` should be specified. If a character is invited with the `squad_member` role, `wing_id` and `squad_id` should either both be specified or not specified at all. If they aren’t specified, the invited character will join any squad with available positions.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "fleet_commander")]
    FleetCommander,
    #[serde(rename = "wing_commander")]
    WingCommander,
    #[serde(rename = "squad_commander")]
    SquadCommander,
    #[serde(rename = "squad_member")]
    SquadMember,
}

impl Default for Role {
    fn default() -> Role {
        Self::FleetCommander
    }
}

