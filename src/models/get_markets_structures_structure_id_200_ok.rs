/*
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GetMarketsStructuresStructureId200Ok : 200 ok object



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetMarketsStructuresStructureId200Ok {
    /// duration integer
    #[serde(rename = "duration")]
    pub duration: i32,
    /// is_buy_order boolean
    #[serde(rename = "is_buy_order")]
    pub is_buy_order: bool,
    /// issued string
    #[serde(rename = "issued")]
    pub issued: String,
    /// location_id integer
    #[serde(rename = "location_id")]
    pub location_id: i64,
    /// min_volume integer
    #[serde(rename = "min_volume")]
    pub min_volume: i32,
    /// order_id integer
    #[serde(rename = "order_id")]
    pub order_id: i64,
    /// price number
    #[serde(rename = "price")]
    pub price: f64,
    /// range string
    #[serde(rename = "range")]
    pub range: Range,
    /// type_id integer
    #[serde(rename = "type_id")]
    pub type_id: i32,
    /// volume_remain integer
    #[serde(rename = "volume_remain")]
    pub volume_remain: i32,
    /// volume_total integer
    #[serde(rename = "volume_total")]
    pub volume_total: i32,
}

impl GetMarketsStructuresStructureId200Ok {
    /// 200 ok object
    pub fn new(duration: i32, is_buy_order: bool, issued: String, location_id: i64, min_volume: i32, order_id: i64, price: f64, range: Range, type_id: i32, volume_remain: i32, volume_total: i32) -> GetMarketsStructuresStructureId200Ok {
        GetMarketsStructuresStructureId200Ok {
            duration,
            is_buy_order,
            issued,
            location_id,
            min_volume,
            order_id,
            price,
            range,
            type_id,
            volume_remain,
            volume_total,
        }
    }
}

/// range string
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Range {
    #[serde(rename = "station")]
    Station,
    #[serde(rename = "region")]
    Region,
    #[serde(rename = "solarsystem")]
    Solarsystem,
    #[serde(rename = "1")]
    _1,
    #[serde(rename = "2")]
    _2,
    #[serde(rename = "3")]
    _3,
    #[serde(rename = "4")]
    _4,
    #[serde(rename = "5")]
    _5,
    #[serde(rename = "10")]
    _10,
    #[serde(rename = "20")]
    _20,
    #[serde(rename = "30")]
    _30,
    #[serde(rename = "40")]
    _40,
}

impl Default for Range {
    fn default() -> Range {
        Self::Station
    }
}

